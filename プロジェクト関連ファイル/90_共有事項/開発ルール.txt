開発ルール

・メソッド名変数名はキャメルケースで統一。

・<form>はpostで送る

・データベース接続はConnectionTeamBを使用
	ConnectionTeamB使用時はサーブレットに以下のソースコードを記述
	ConnectionTeamB cb = new ConnectionTeamB();
	以降Connectionはcb.getCon()で記述

・エラーメッセージの表示はerrOccur.jspをincludeして使う。

・成功メッセージの表示はsucOccur.jspをincludeして使う。

・権限は以下のように定める。（40_詳細設計 S0040_アカウント編集_v00.xls S0041より引用）
	0 :売上登録権限→無、アカウント登録権限→無
	1 :売上登録権限→有、アカウント登録権限→無
	10:売上登録権限→無、アカウント登録権限→有
	11:売上登録権限→有、アカウント登録権限→有

・ソースコードレビューに関して。
	●指摘事項は
		90.共有事項 -> レビュー指摘事項
		に格納する事。
		「ファイル名はyyyymmdd_(自身の苗字).txt」
	●他者のレビュー記録も必ず読み、自身のソースコードに反映させること。

☆2020/7/30変更点
・入力内容の長さチェック、空白チェックはCheckLengthを使用
	→入力内容の長さチェック、空白チェック、メールの形式チェック、
	  パスワードとパスワード（確認）の一致チェック、ラジオボタンの値チェックは
	  CheckInputValuesを使用（CheckLength.javaは使用しない）
	CheckInputValues使用時はサーブレットに以下のソースコードを記述
	//長さチェック
	CheckInputValues.checkLength(長さをチェックしたい項目,バイト数の最大値（メールアドレスなら100));
	//空白チェック
	CheckInputValues.inputEmptyCheck(空白をチェックしたい項目);
	//メールの形式チェック
	CheckInputValues.mailFormatCheck(メールアドレス);
	//パスワード一致チェック
	CheckInputValues.passwordCheck(パスワード, パスワード（確認）);
	//ラジオボタンチェック
	CheckInputValues.radioButtonCheck(値をチェックしたいラジオボタンの項目);

・ログインチェックはLoginCheckを使用
	→ログインチェックはLoginCheckを使用、
	  権限チェックはAuthCheckとPermitUseFunctionを使用
	LoginCheck使用時はサーブレットに以下のソースコードを記述
	LoginCheck.checkLoginAndTransition(request, response);
	AuthCheckとPermitUseFunction使用時はサーブレットに以下のソースコードを記述
	PermitUseFunction puf = new PermitUseFunction();
	AuthCheck.checkAuthandTransition(request, response, 画面遷移先（JSP）,
				puf.getPermitList(※必要な権限));
	画面遷移先はdoPostでのログインチェック時はnullにする
	※必要な権限
	アカウント登録 →"account"
	売上登録       →"sales"
	権限が不要     →"all"
